<Window x:Class="AutoHostsUpdateGUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:properties="clr-namespace:AutoHostsUpdateGUI.Properties"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AutoHostsUpdateGUI"
        mc:Ignorable="d"
        ResizeMode="NoResize"
        Title="AutoHostsUpdateGUI" Height="500" Width="700">

    <DockPanel>
        <StatusBar x:Name="statusBar" VerticalAlignment="Bottom" DockPanel.Dock="Bottom" Height="35">
            <StatusBarItem Content="{x:Static properties:Resources.StatusTitle}" Margin="10,0,0,0"/>
            <StatusBarItem x:Name="serviceStatusStatusBarItem" Margin="0,0,0,0" Width="200"/>
            <StatusBarItem Margin="7,0" HorizontalAlignment="Right" >
                <Button x:Name="serviceStartStopButton" Content="" Height="25" MinWidth="75" HorizontalAlignment="Right" Click="serviceStartStopButton_Click"/>
            </StatusBarItem>
        </StatusBar>
        <Menu Margin="0" VerticalAlignment="Top" DockPanel.Dock="top">
            <MenuItem Header="{x:Static properties:Resources.Menu_File}">
                <MenuItem Header="{x:Static properties:Resources.Menu_Import}" Click="MenuItem_Import_Click"/>
                <MenuItem Header="{x:Static properties:Resources.Menu_Export}" Click="MenuItem_Export_Click"/>
                <Separator/>
                <MenuItem Header="{x:Static properties:Resources.Menu_Exit}" Click="MenuItem_Exit_Click" />
            </MenuItem>
            <MenuItem Header="{x:Static properties:Resources.Menu_Edit}">
                <MenuItem Header="{x:Static properties:Resources.Menu_Cut}" InputGestureText="Ctrl+X" 
                          Command="ApplicationCommands.Cut"/>
                <MenuItem Header="{x:Static properties:Resources.Menu_Copy}" InputGestureText="Ctrl+C" 
                          Command="ApplicationCommands.Copy"/>
                <MenuItem Header="{x:Static properties:Resources.Menu_Paste}" InputGestureText="Ctrl+V" 
                          Command="ApplicationCommands.Paste"/>
            </MenuItem>
        </Menu>
        <GroupBox Header="{x:Static properties:Resources.BasicSettingsPanel}" VerticalAlignment="Top" Margin="10" Height="Auto" Width="Auto" DockPanel.Dock="top" MinWidth="301" MinHeight="100">
            <StackPanel Orientation="Vertical" Margin="10">
                <CheckBox x:Name="internalHostsPathCheckBox" Content="{x:Static properties:Resources.InternalHostsPathCheckBox}" Margin="5" Checked="internalHostsPathCheckBox_Checked" Unchecked="internalHostsPathCheckBox_Unchecked"/>
                <StackPanel Orientation="Horizontal" Margin="5">
                    <TextBlock x:Name="internalHostsPathTextBlock" TextWrapping="Wrap" Text="{x:Static properties:Resources.InternalHostsPathTextBlock}" Margin="5"/>
                    <TextBox x:Name="internalHostsPathTextBox" HorizontalAlignment="Right" Height="23" Text="" Width="300" Margin="5" IsEnabled="{Binding ElementName=internalHostsPathCheckBox, Path=IsChecked}" TextChanged="internalHostsPathTextBox_TextChanged"/>
                    <Button x:Name="openFileInternalHostsButton" Content="..." Height="23" Width="20" Click="openFileInternalHostsButton_Click"/>
                </StackPanel>
                <CheckBox x:Name="externalHostsPathCheckBox" Content="{x:Static properties:Resources.ExternalHostsPathCheckBox}" Margin="5" Checked="externalHostsPathCheckBox_Checked" Unchecked="externalHostsPathCheckBox_Unchecked"/>
                <StackPanel Orientation="Horizontal" Margin="5">
                    <TextBlock x:Name="externalHostsPathTextBlock" TextWrapping="Wrap" Text="{x:Static properties:Resources.ExternalHostsPathTextBlock}" Margin="5"/>
                    <TextBox x:Name="externalHostsPathTextBox" HorizontalAlignment="Right" Height="23" Text="" Width="300" Margin="5" IsEnabled="{Binding ElementName=externalHostsPathCheckBox, Path=IsChecked}" TextChanged="externalHostsPathTextBox_TextChanged"/>
                    <Button x:Name="openFileExternalHostsButton" Content="..." Height="23" Width="20" Click="openFileExternalHostsButton_Click"/>
                </StackPanel>
            </StackPanel>
        </GroupBox>
        
        <GroupBox Header="{x:Static properties:Resources.NetworkAuthenticationPanel}" VerticalAlignment="Top" Margin="10" Height="Auto" Width="Auto" DockPanel.Dock="top" MinWidth="301" MinHeight="100">
            <StackPanel Orientation="Vertical" Margin="10">
                <CheckBox x:Name="networkAuthenticationCheckBox" Content="{x:Static properties:Resources.NetworkAuthenticationCheckBox}" Margin="5" Checked="networkAuthenticationCheckBox_Checked" Unchecked="networkAuthenticationCheckBox_Unchecked"/>
                <StackPanel Orientation="Horizontal" Margin="5">
                    <StackPanel Orientation="Vertical">
                        <Grid Height="23" Margin="5">
                            <TextBlock x:Name="NetworkAuthenticationUsernameTextBlock" Text="{x:Static properties:Resources.NetworkAuthenticationUsernameTextBlock}" VerticalAlignment="Center"/>
                        </Grid>
                        <Grid Height="23" Margin="5">
                            <TextBlock x:Name="NetworkAuthenticationPasswordTextBlock" Text="{x:Static properties:Resources.NetworkAuthenticationPasswordTextBlock}" VerticalAlignment="Center"/>
                        </Grid>
                    </StackPanel>
                    <StackPanel Orientation="Vertical">
                        <TextBox x:Name="networkAuthenticationUsernameTextBox" Height="23" Text="" Width="300" Margin="5" IsEnabled="{Binding ElementName=networkAuthenticationCheckBox, Path=IsChecked}" TextChanged="networkAuthenticationUsernameTextBox_TextChanged"/>
                        <PasswordBox x:Name="networkAuthenticationPasswordPasswordBox" HorizontalAlignment="Right" Height="23" Width="300" Margin="5" IsEnabled="{Binding ElementName=networkAuthenticationCheckBox, Path=IsChecked}" PasswordChanged="networkAuthenticationPasswordPasswordBox_PasswordChanged"/>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </GroupBox>
        <Button x:Name="applyButton" Content="{x:Static properties:Resources.ApplyButton}" Height="25" VerticalAlignment="Top" MinWidth="75" HorizontalAlignment="Right" DockPanel.Dock="top" Margin="10" Click="applyButton_Click" IsEnabled="False"/>

    </DockPanel>
</Window>
